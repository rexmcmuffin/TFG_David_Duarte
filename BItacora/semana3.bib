@INPROCEEDINGS{8242925,
  author={Chen, Jian and Li, Peng and Song, Gangbing and Wang, Shubo and Tan, Yu and Zheng, Yongjun},
  booktitle={2017 Chinese Automation Congress (CAC)}, 
  title={Systematic development of an optimized real-time embedded control platform}, 
  year={2017},
  volume={},
  number={},
  pages={1075-1080},
  keywords={Embedded systems;Hardware;Random access memory;Real-time systems;Control systems;Optimized embedded system;microcontroller;real time operating system;hardware;software},
  doi={10.1109/CAC.2017.8242925}}

  @INPROCEEDINGS{8751767,
  author={Ovur, Salih Ertug and Candan, Fethi and Beke, Aykut and Kumbasar, Tufan},
  booktitle={2018 6th International Conference on Control Engineering & Information Technology (CEIT)}, 
  title={YAFT: A Fuzzy Logic based Real Time Two-Wheeled Inverted Pendulum Robot}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  keywords={Intelligent control;Wheels;DC motors;Sensor fusion;Fuzzy logic;Real-time systems;Two-wheeled Inverted Pendulum;Real-time Control;Intelligent Control System;Fuzzy Logic;Sensor Fusion},
  doi={10.1109/CEIT.2018.8751767}}

  @INPROCEEDINGS{5968809,
  author={Fang, Zheng and Fu, Yanhua},
  booktitle={2011 Chinese Control and Decision Conference (CCDC)}, 
  title={A networked embedded real-time controller for complex control systems}, 
  year={2011},
  volume={},
  number={},
  pages={3210-3215},
  keywords={Real time systems;Control systems;Software;Algorithm design and analysis;Digital signal processing;Linux;Software algorithms;Embedded controller;RTAI-Linux;ARM;DSP;Matlab/Simulink/RTW},
  doi={10.1109/CCDC.2011.5968809}}

  @INPROCEEDINGS{7181866,
  author={Rath, Gerhard},
  booktitle={2015 4th Mediterranean Conference on Embedded Computing (MECO)}, 
  title={Real-time optimal control and controller design on embedded systems}, 
  year={2015},
  volume={},
  number={},
  pages={60-63},
  keywords={Real-time systems;Optimal control;Operating systems;Cranes;Load modeling;Mathematical model;Automation;optimal control;Hamiltonian;real-time;ethernet;UDP},
  doi={10.1109/MECO.2015.7181866}}

  @INPROCEEDINGS{4155305,
  author={Ishikawa, Makoto and McCune, D.J. and Saikalis, George and Oho, Shigeru},
  booktitle={13th IEEE Real Time and Embedded Technology and Applications Symposium (RTAS'07)}, 
  title={CPU Model-Based Hardware/Software Co-design, Co-simulation and Analysis Technology for Real-Time Embedded Control Systems}, 
  year={2007},
  volume={},
  number={},
  pages={3-11},
  keywords={Hardware;Embedded software;Real time systems;Control system synthesis;Control systems;Microcontrollers;Robust control;System analysis and design;Mechatronics;Microarchitecture},
  doi={10.1109/RTAS.2007.9}}

  @article{Ma2008IntegratedDA,
  title={Integrated Design and Implementation of Embedded Control Systems with Scilab},
  author={Longhua Ma and Feng Xia and Zhe Peng},
  journal={Sensors (Basel, Switzerland)},
  year={2008},
  volume={8},
  pages={5501 - 5515},
  url={https://api.semanticscholar.org/CorpusID:2936745}
}

@INPROCEEDINGS{4756316,
  author={Peng, Zhe and Ma, Longhua and Xia, Feng},
  booktitle={2008 IEEE/IFIP International Conference on Embedded and Ubiquitous Computing}, 
  title={A Low-Cost Embedded Controller for Complex Control Systems}, 
  year={2008},
  volume={1},
  number={},
  pages={23-29},
  keywords={Control systems;Industrial control;Application software;Real time systems;Open source software;Embedded system;Mathematical model;Costs;Automatic control;Automatic generation control;Embedded Systems;Complex Control Systems;Scilab;ARM Linux},
  doi={10.1109/EUC.2008.40}}

  @inproceedings{Shao2012TheID,
  title={The Innovative Design of Low Cost Embedded Controller for Complex Control Systems},
  author={Meng Shao and Zhe Peng and Longhua Ma},
  year={2012},
  url={https://api.semanticscholar.org/CorpusID:44584426}
}

@INPROCEEDINGS{735019,
  author={Nelson, J. and Kraft, L.G.},
  booktitle={Proceedings of 1994 American Control Conference - ACC '94}, 
  title={Real-time control of an inverted pendulum system using complementary neural network and optimal techniques}, 
  year={1994},
  volume={3},
  number={},
  pages={2553-2554 vol.3},
  keywords={Real time systems;Optimal control;Control systems;Neural networks;Nonlinear control systems;Control nonlinearities;Limit-cycles;Robot control;State feedback;Regulators},
  doi={10.1109/ACC.1994.735019}}

@ARTICLE{Khamis_2013,title={Control System Design Based on Modern Embedded Systems},year={2013},author={Ahmed Khamis and Ahmed Khamis and Dawid Zydek and Dawid Zydek and Grzegorz Borowik and Grzegorz Borowik and D. Subbaram Naidu and D. Subbaram Naidu},doi={10.1007/978-3-642-53862-9_62},pmid={null},pmcid={null},mag_id={2132704826},journal={null},abstract={The functionality and complexity of real-world engineering control systems is increasing significantly due to continuous growth in requirements and their details. Since this trend is predicted to grow even stronger, the old control solutions will be becoming less and less efficient. There are several approaches to designing modern control systems that meet the current and future needs. In this paper, we focus on one of the promising ways to control engineering: Embedded Systems. We describe categories of embedded systems and an engineering approach to control systems design based on the embedded systems. All related challenges are presented considering weaknesses of traditional systems. For the described embedded control system, a design methodology is given as well. Our discussion focuses on approach based on Field-Programmable Gate Array (FPGA) as a solution with huge potential. Finally, we share our thoughts on further trends in modern embedded control systems.}}
@ARTICLE{Albertos_2005,title={EMBEDDED CONTROL SYSTEMS: SOME ISSUES AND SOLUTIONS},year={2005},author={Pedro Albertos and Pedro Albertos and Alfons Crespo and Alfons Crespo and Marina Vallés and M. Vallés and Ismael Ripoll and Ismael Ripoll},doi={10.3182/20050703-6-cz-1902.01074},pmid={null},pmcid={null},mag_id={2015368310},journal={IFAC Proceedings Volumes},abstract={Abstract   Embedded control systems are becoming ubiquitous in control applications. They combine the properties of computer embedded system with newly designed complex controllers where flexible, safe and reconfigurable operations are required. The aim of this paper is to grasp the main features of these systems, analyse the main problems and present some solutions already developed by the authors. A new concept on the control kernel of an application is also introduced and some conclusions are drafted.}}
@ARTICLE{Bruzzone_2006,title={Standard Linux for embedded real-time manufacturing control systems},year={2006},author={Gabriele Bruzzone and G. Bruzzone and Gabriele Bruzzone and Massimo Caccia and Massimo Caccia and Alessio Bertone and A. Bertone and A. Bertone and G. Ravera and Gianfranco Ravera and G. Ravera},doi={10.1109/med.2006.328773},pmid={null},pmcid={null},mag_id={1978767733},journal={null},abstract={The main goal of the research presented in this paper was to evaluate the possibility of using standard Linux for embedded real-time applications in manufacturing as a consequence of dramatic improvements in hardware computing power and free software quality in the last few years. After an accurate analysis of the problems related to making Linux, a native Unix-like fair kernel, real-time, laboratory tests showed that a large variety of applications (up to 1 KHz) can be implemented using Linux and commercial-of-the-shelf (COTS) hardware. A practical example of the control system of a marking machine for steelworks is reported and discussed.}}
@ARTICLE{Kume_2009,title={Towards an open-source integrated development and real-time control platform for robots},year={2009},author={Shuhei Kume and Shuhei Kume and Yoshikazu Kanamiya and Yoshikazu Kanamiya and Daisuke Sato and Daisuke Sato},doi={10.1109/robio.2009.4913004},pmid={null},pmcid={null},mag_id={2052101070},journal={null},abstract={The paper proposes an open-source platform for developing kinematic and dynamic models, simulation and control design of robots, based on MaTX [1]. We show that the developed programs can be easily transfered for direct execution in real-time, making use of improvements in the recent Linux kernel toward hard real-time capability. We show that, in combination with the real-time preemption patch of Ingo Molnar [2], there is the potential for real-time control of a robot arm. This is confirmed through experiments for real-time control of a Mitsubishi Heavy Industries seven-DOF PA-10 robot [3].}}
@ARTICLE{Kraft_1994,title={Time optimal control using CMAC neural networks},year={1994},author={L.G. Kraft and L.G. Kraft and D.R. Dietz and D. Dietz},doi={10.1109/acc.1994.735108},pmid={null},pmcid={null},mag_id={1608927148},journal={null},abstract={A particular form of neural network called CMAC has been shown to have many characteristics well-suited to real time control problems. In this paper, the CMAC concept is applied to a time optimal control problem. An example system (DC servomotor) is analyzed using both simulation and real-time laboratory experiments. The neural network based controller is capable of handling both linear and nonlinear systems, is very efficient in real-time operation and the results extend to higher order systems.}}
@ARTICLE{Hristu-Varsakelis_2007,title={Handbook Of Networked And Embedded Control Systems},year={2007},author={Dimitrios Hristu-Varsakelis and William S. Levine},doi={null},pmid={null},pmcid={null},mag_id={1540356186},journal={null},abstract={Preface Part I. Fundamentals Fundamentals of Dynamical Systems Control of Single-Input Single-Output Systems Basics of Sampling and Quantization Discrete-Event Systems Introduction to Hybrid Systems Finite Automata Basics of Computer Architecture Real-Time Scheduling for Embedded Systems Network Fundamentals Part II. Hardware Basics of Data Acquisition and Control Programmable Logic Controllers Digital Signal Processors Microcontrollers SOPCs: Systems on Programmable Chips Part III. Software Fundamentals of RTOS-Based Digital Controller Implementation-Aware Embedded Control Systems From Control Loops to Real-Time Programs Embedded Real-Time Control via MATLAB, Simulink, and xPC Target LabVIEW Real-Time for Networked/Embedded Control Control Loops in RTLinux Part IV. Theory An Introduction to Hybrid Automata An Overview of Hybrid Systems Control Temporal Logic Model Checking Switched Systems Feedback Control with Communication Constraints Networked Control Systems: A Model-Based Approach Control Issues in Systems with Loop Delays Part V. Networking Network Protocols for Networked Control Systems Control Using Feedback over Wireless Ethernet and Bluetooth Bluetooth in Control Embedded Sensor Networks Part VI. Applications Vehicle Applications of Controller Area Network Control of Autonomous Mobile Robots Wireless Control with Bluetooth The Cornell RoboCup Robot Soccer Team: 1999-2003 Index}}
@ARTICLE{Gu_2004,title={Development and implementation of a real-time open-architecture control system for industrial robot systems},year={2004},author={Jianhua. Gu and J.S. Gu and C.W. de Silva and C.W. de Silva},doi={10.1016/j.engappai.2004.03.010},pmid={null},pmcid={null},mag_id={2032888992},journal={Engineering Applications of Artificial Intelligence},abstract={Abstract   This paper presents a real-time open-architecture control system (ROACS) which has been developed for flexible manipulation of industrial robots. Flexible manipulation refers to robot manipulation that handles tasks with uncertainties; hence, decision-making based on feedback data is essential in realtime operation. A real-time open-architecture control system with the capacity of parallel processing of realtime events, extraction of information from realtime data, and intelligent decision-making, is developed. The entire system consists of a real-time subsystem which manages robot hardware and executes path planning and data processing, and an intelligent subsystem which performs intelligent decision-making and feedback task control. In the context of intelligent task control, information extraction, fuzzy-logic-based interpretation and decision-making, and a novel design of associated real-time robot task language (RTTL) are developed. The conflicts between high bandwidth requirements for real-time services and the undeterministic time length for intelligent decision-making are managed in a cooperative real-time intelligent system model. Client–server architecture is found quite suitable for implementation of the system. The entire system has been successfully developed, implemented, and demonstrated for a robotic salmon slicing task which requires online determination of the backbone position.}}

@ARTICLE{Auslander_1995,title={A design and implementation methodology for real time control of mechanical systems},year={1995},author={David M. Auslander and David M. Auslander and An‐Chyau Huang and An-Chyau Huang and M. Lemkin and Mark Lemkin},doi={10.1016/0957-4158(95)00042-4},pmid={null},pmcid={null},mag_id={2066955322},journal={Mechatronics},abstract={Real time software forms the core of mechatronic systems. It provides the medium for implementation of far more complex decision making than had been possible with previous technologies. This paper describes a methodology for the design of real time software for control and for its portable implementation. In addition to automated generation of engineering documentation, the method provides for production of diagnostic audit trail information and a means for comparative performance evaluation.}}
@ARTICLE{Zhao_2021,title={A Real-time Reconfigurable Edge computing System in Industrial Internet of Things Based on FPGA},year={2021},author={Chun Zhao and Chun Zhao and Chuan Xiao and Chuan Xiao and Yue Liu and Yue Liu},doi={10.1109/iciea51954.2021.9516225},pmid={null},pmcid={null},mag_id={3197539033},journal={2021 IEEE 16th Conference on Industrial Electronics and Applications (ICIEA)},abstract={In the environment of industrial Internet of things, due to the complexity and variability environment, edge computing related technologies are being widely applied. However, the edge node is constrained by cost, volume, power consumption and other conditions, so the ability of edge computing can not be fully played. In order to make edge computing give full play to its characteristics of flexible management, collaborative execution and heterogeneous environment. This paper proposes a real-time reconfigurable edge computing system based on FPGA. The system can be built in real time according to the requirement, by the characteristics of FPGA, including reconfigurable, partial reconfigurable and precise clock control. The system is divided into three parts from macro to micro structure, including: cloud-based configuration information management module, highperformance embedded module based on FPGA and combinable function module based on multi-processor core. Result shows that the system can meet the remotely configuration of cloud according to the environment and requirement of the edge end, so as to quickly build a edge computing system that matches the environment and requirements.}}
@ARTICLE{Rath_2015,title={Real-time optimal control and controller design on embedded systems},year={2015},author={Gerhard Rath and Gerhard Rath},doi={10.1109/meco.2015.7181866},pmid={null},pmcid={null},mag_id={1540879594},journal={Mediterranean Conference on Embedded Computing},abstract={Modern small-scale electronic systems based on ARM-processors provide surprising computing power and allow implementation of complex algorithms that usually are not applied in automation engineering. In this work a Hamiltonian-based optimal path control for a dynamical system of fourth order is implemented. It turns out that even the controller design that requires advanced numerical computation can run on the system in a real-time manner. In order to verify the theoretical approach, the controller was tested on a mechanical model. Finally the performance data of the actual control task are given.}}
@ARTICLE{Itō_2007,title={CPU Model-Based Hardware/Software Co-design, Co-simulation and Analysis Technology for Real-Time Embedded Control Systems},year={2007},author={Makoto Itō and Makoto Ishikawa and D. J. McCune and Donald J. McCune and George Saikalis and George Saikalis and Shigeru Oho and Shigeru Oho},doi={10.1109/rtas.2007.9},pmid={null},pmcid={null},mag_id={2159438346},journal={IEEE Real Time Technology and Applications Symposium},abstract={This paper proposes a new development method for highly reliable real-time embedded control systems using a CPU model-based hardware/software co-simulation. We take an approach that allows the full simulation of the virtual mechanical control system including the mechatronics plant, microcontroller hardware and object code level software. This full virtual system simulation reveals the control system behavior, especially in microcontroller hardware and software. It enables microarchitecture design space exploration, control design validation, robustness evaluation of the system, software optimization before components design, and prevents potential problems. A novel aspect of this work is that the proposed virtual control system comprises all the components in a typical control system, therefore it enables the analysis of the effects from the different domains, for example the mechanical analysis of behavior due to a control software bug. To help the design, evaluation and analysis, we developed an integrated behavior analyzer into the development environment. This can display the processor behavior graphically during the simulation without affecting the simulation results, such as task level CPU load, interrupt statistics and software variable transition chart. This analyzer provides useful information on the behavior. No software modification is necessary for this virtual system analysis, and this analysis does not change the control timing and does not require any processing power on the target microcontroller. Therefore this method is suitable for real-time embedded control system design, in particular automotive control system design which requires high level reliability, robustness, quality and safety. In this paper, a Renesas SH-2A microcontroller model was developed on a CoMETtrade platform from VaST Systems Technology. An ETC (electronic throttle control) system is chosen as the plant to prove this concept. The ETB (electronic throttle body) model on Saberreg simulator from Synopsysreg was co-simulated with the SH-2A model. The SH-2A chip was under development during this project, nevertheless we could complete the OSEK OS development, control software design and verification using the virtual system. We confirmed that such software could run on an actual ETC hardware system without modification after a working sample chip was released at a later stage in the course of this work. This demonstrates that our models and simulation environment are sufficiently credible and trustful}}
@ARTICLE{Eriksson_2007,title={A comprehensive approach to design of embedded real-time software for controlling mechanical systems},year={2007},author={Johan Eriksson and Johan Eriksson and Per Lindgren and Per Lindgren},doi={10.4271/2007-01-3744},pmid={null},pmcid={null},mag_id={2288108652},journal={null},abstract={In this paper, we present a comprehensive approach to design of embedded real-time software for electrically controlled mechanical systems in automotive applications. As a case study, we implement  ...}}
@ARTICLE{Fang_2011,title={A networked embedded real-time controller for complex control systems},year={2011},author={Zheng Fang and Zheng Fang and Yanhua Fu and Yanhua Fu},doi={10.1109/ccdc.2011.5968809},pmid={null},pmcid={null},mag_id={2071961745},journal={Chinese Control and Decision Conference},abstract={The complexity of real-world industrial control systems is growing rapidly due to expanding requirements on the system functionalities. As this trend continues, the old control system is becoming less and less efficient. To solve this problem, in this paper, we develop a networked embedded real-time controller on which various control applications such as modeling, parameter identification, simulation and real-time control can be easily implemented to meet the ever-expanding requirements of complex industrial control applications. The embedded controller is built based on dual-core architecture (ARM plus DSP) to achieve high computational performance. A unified software development environment for complex control method is also developed to reduce the development time and cost. Finally, a complex control algorithm is implemented for a practical plant, which demonstrates the capabilities and the performances of the embedded controller. This controller can be widely used for educational, academic and industrial applications.}}
@ARTICLE{Ma_2008,title={Integrated Design and Implementation of Embedded Control Systems with Scilab},year={2008},author={Longhua Ma and Longhua Ma and Feng Xia and Feng Xia and Zhe Peng and Zhe Peng},doi={10.3390/s8095501},pmid={27873827},pmcid={3705517},mag_id={2949425358},journal={arXiv: Other Computer Science},abstract={Embedded systems are playing an increasingly important role in control engineering. Despite their popularity, embedded systems are generally subject to resource constraints and it is therefore difficult to build complex control systems on embedded platforms. Traditionally, the design and implementation of control systems are often separated, which causes the development of embedded control systems to be highly time-consuming and costly. To address these problems, this paper presents a low-cost, reusable, reconfigurable platform that enables integrated design and implementation of embedded control systems. To minimize the cost, free and open source software packages such as Linux and Scilab are used. Scilab is ported to the embedded ARM-Linux system. The drivers for interfacing Scilab with several communication protocols including serial, Ethernet, and Modbus are developed. Experiments are conducted to test the developed embedded platform. The use of Scilab enables implementation of complex control algorithms on embedded platforms. With the developed platform, it is possible to perform all phases of the development cycle of embedded control systems in a unified environment, thus facilitating the reduction of development time and cost.}}
@ARTICLE{Nelson_1994,title={Real-time control of an inverted pendulum system using complementary neural network and optimal techniques},year={1994},author={John D. Nelson and J. Nelson and L.G. Kraft and L.G. Kraft},doi={10.1109/acc.1994.735019},pmid={null},pmcid={null},mag_id={1529727201},journal={null},abstract={Inverted pendulum is a simple, inherently unstable system which exhibits the fundamental characteristics of balance. This paper explores the control of a robotic pole-balancing system using complementary optimal and neural network techniques. A full state feedback linear regulator type optimal controller was developed from the approximate system model. When applied to the real physical system, this controller produced a relatively large limit cycle, due primarily to unmodelled system nonlinearities. The CMAC neural network was then introduced into the controller to learn any nonlinearities, reject residual noise, and, as a result, shrink the system limit cycle.}}
@ARTICLE{Schmidt_2020,title={Control architecture for embedding reinforcement learning frameworks on industrial control hardware},year={2020},author={Alexander Schmidt and Alexander Schmidt and Florian Schellroth and Florian Schellroth and Oliver Riedel and Oliver Riedel},doi={10.1145/3378184.3378198},pmid={null},pmcid={null},mag_id={3008534214},journal={null},abstract={Using reinforcement learning to find new control strategies for manufacturing processes is a promising approach. However, in order to use reinforcement learning in a manufacturing environment, industrial requirements must be met. In this paper, a new control architecture is proposed that allows reinforcement learning frameworks to be executed on programmable logic controllers, which implies requirements regarding real-time execution. An agent exchange module is presented, that allows to automatically load agents from a non real-time learning environment to a control program running in a real-time environment of a programmable logic controller. The proposed architecture is evaluated on an experimental setup with a non-linear process and commercial off-the-shelf control hardware, to meet industrial requirements. A genetic algorithm is used to learn new control strategies without having prior knowledge of the system.}}
